// assignment operator： 赋值运算符



// 赋值运算符：
// 作用：将等号右侧运算后的值赋给等号左侧的变量
// 返回值：赋值表达式返回赋值后左侧变量的值
// 
// 
// =
// +=
// -=
// *=
// /=
// %=
// ...
//
//
// 注意事项：
// 	1.赋值运算符的结合性是从右向左（先把表达式右边运算完，再赋给左边）
// 	2.赋值运算符左边只能是变量，右边可以是常量、变量、表达式
// 	3.a+=b相当于a=a+b;
// 	4.复合赋值符运算会【自动进行强转类型转换】：
// 		如：假设存在byte类型的b，(1)b += 2;不报错，(2)b = b + 2;报错
// 		b += 2; 的本质其实是 b = (byte)(b + 2);
// 		b++; 同理，也会自动强转





public class _04_AssignmentOperator {
	public static void main(String[] args) {
		
		int a = 0, b = 1;
		System.out.println(a = 1);// 1，赋值运算符返回赋值后表达式的左值
		System.out.println(b += 5);// 6


		
		// 符合赋值赋会自动进行强转类型转换
		byte c = 1;
		//c = c + 2;// 报错，等式右侧类型提升为int
		c = (byte)(c + 2);
		c += 2;		// 不报错
		c += 1000;	// 不报错
		// 越界赋值不报错，说明 += 将右侧表达式的值强转转换为(byte)
		
		c++;// 不报错，自增同样也会强转类型转换	
	}
}