// code block：代码块


// 代码块
//
// (1)概念
//  代码块，又称为初始化代码块，属于类中的成员
//
// (2)语法
//  [static] {
//      代码
//  };
//
// (3)语法说明
//  1.使用static修饰的代码块叫“静态代码块”，没有static修饰的就是“普通代码块/非静态代码块”
//  2.代码块结尾的分号“;”，可以有也可以省略
//  3.代码块只能被程序隐式调用：(静态代码块：加载类时执行)/(非静态代码块：new对象时执行)
//
//
// (4)要点
//  1.【代码块的调用时机】:
//    【①静态代码块：会在加载类信息时被执行 （一个类只会调用一次）】
//    【②非静态代码块：会在每次创建新对象时被执行 （在调用构造器之前执行）】
//       构造器执行顺序：①super() ②调用子类非静态代码块 ③调用本类构造器 【代码块可以看作构造器的拓展】
//
//  2.静态代码块只能调用静态成员；非静态代码块可以调用静态/非静态成员
//
//  3.功能：代码块相当于另外一种形式的构造器(对构造器的补充机制)，可以做初始化操作
//
//  4.应用场景：若多个构造器中都有重复的语句，可以将其抽取到初始化代码块中，提高代码的复用性




package com._01_codeBlock;

public class CodeBlock {
    public static void main(String[] args) {
        // (1)静态代码块在加载类时执行
        System.out.println(Book.count);
        //静态代码块被调用
        //0


        // (2)非静态代码块在每次创建对象时执行
        //  注意：先执行代码块，后执行构造器
        new Book("高等数学");
        //非静态代码块被调用
        //构造方法被调用


        new Book("离散数学", 18);
        //非静态代码块被调用
        //构造方法被调用
    }
}
